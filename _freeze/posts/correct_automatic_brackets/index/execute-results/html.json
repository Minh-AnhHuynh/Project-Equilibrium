{
  "hash": "df83c3ec6b88f540dba7e9bf6a82f4c7",
  "result": {
    "markdown": "---\ntitle: \"Use correctly automatic brackets\"\nauthor: \"Minh-Anh Huynh\"\ndate: \"2022-12-12\"\ncategories: [ggplot, stats]\nimage: \"images/tof-example.png\"\nexecute:\n  echo: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install ggpubr package\nlibrarian::shelf(ggpubr, tidyr, quiet = TRUE)\n\n# Create some dummy data\nset.seed(123)\ngroup1 <- rnorm(10, mean = 5, sd = 1)\ngroup2 <- rnorm(10, mean = 7, sd = 2)\ngroup3 <- rnorm(10, mean = 9, sd = 3)\n\n# Combine the data into a data frame\ndata <- data.frame(group1, group2, group3) %>%\n  pivot_longer(cols = everything(), names_to = \"group\")\n\n# Note that ggpubr works for tidy data, hence using pivot_longer()\n\n# Create the plot\nplot <- ggboxplot(data,\n  x = \"group\",\n  y = \"value\",\n  width = 0.5,\n  fill = \"group\",\n  add = \"jitter\"\n) + stat_compare_means(method = \"anova\")\nprint(plot)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nNow let's add some brackets:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Note that ggpubr seems to also load rstatix\nlibrarian::shelf(rstatix, quiet = TRUE)\n\n# Here is how you can add brackets with P values in your plot:\n\naov_results <- anova_test(value ~ group, data = data)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in summary.lm(mod, corr = FALSE): partial argument match of 'corr' to\n'correlation'\n```\n:::\n\n```{.r .cell-code}\nif (aov_results$p <= 0.05) {\n  tukey_test <- tukey_hsd(data, value ~ group) %>% add_y_position()\n  plot + stat_pvalue_manual(tukey_test, label = \"P = {p.adj}\")\n}\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Note that it is recommended to use an italic *P* in uppercase. I don't think\n# this is possible in an R code, so a simple uppercase P should suffice. However\n# now the problem is that the automatic p for the anova test is in lowercase.\n\n\n# Alternatively with P symbols (not recommended anymore):\n# From ?stat_compare_means()\nsymnum.args <-\n  list(\n    cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, Inf),\n    symbols = c(\"****\", \"***\", \"**\", \"*\", \"ns\")\n  )\n# Brackets for anova would not work, so you need another test\nmy_comparisons <- list(c(\"group1\", \"group2\"), c(\"group2\", \"group3\"), c(\"group1\", \"group3\"))\nplot + stat_compare_means(method = \"wilcox.test\", comparisons = my_comparisons, symnum.args = symnum.args)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Note that the following code doesn't work:\naov_results <- anova_test(value ~ group, data = data) %>%\n  tukey_hsd() %>%\n  add_y_position()\n# Instead, don't start from anova and use the test directly:\ntukey_test <- tukey_hsd(data, value ~ group) %>% add_y_position()\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}